name: ci

on: [push, pull_request]

jobs:
  ci-php8-jit:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        swoole: [ 4.6-php8.0 ]
        mysql: [ 8.0 ]
    env:
      SWOOLE_DOCKER_VERSION: ${{ matrix.swoole }}
      MYSQL_DOCKER_VERSION: ${{ matrix.mysql }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer
          key: ${{ runner.os }}-composer-${{ matrix.swoole }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.swoole }}-
            ${{ runner.os }}-composer-
      - name: Prepare
        run: |
          docker-compose -f ./.github/ci.docker-compose.yml up -d swoole-php8
          docker exec swoole-php8 php -v && php -m
          docker exec swoole-php8 php --ri swoole
          docker exec swoole-php8 php -r "var_dump(opcache_get_status(false));"
          docker exec swoole-php8 composer -V
          docker exec swoole-php8 composer update --no-interaction --prefer-dist --no-progress
          .github/prepare-kafka.sh
          docker exec swoole-php8 bash tests/db/install-db.sh
      - name: Test
        run: docker exec swoole-php8 composer test
      - name: Test components
        run: docker exec swoole-php8 composer test-components
      - name: Print logs
        if: failure()
        run: docker exec swoole-php8 php .github/print-logs.php

  ci-php:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        swoole:
          [
            4.6-php7.2,
            4.6-php7.3,
            4.6-php7.4,
            4.6-php8.0,
            4.5-php7.1,
            4.5-php7.2,
            4.5-php7.3,
            4.5-php7.4,
            4.5-php8.0,
            4.4-php7.1,
            4.4-php7.2,
            4.4-php7.3,
            4.4-php7.4,
          ]
        mysql: [
          5.7,
          8.0,
        ]
    env:
      SWOOLE_DOCKER_VERSION: ${{ matrix.swoole }}
      MYSQL_DOCKER_VERSION: ${{ matrix.mysql }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer
          key: ${{ runner.os }}-composer-${{ matrix.swoole }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.swoole }}-
            ${{ runner.os }}-composer-
      - name: Prepare
        run: |
          docker-compose -f ./.github/ci.docker-compose.yml up -d swoole
          docker exec swoole php -v && php -m
          docker exec swoole php --ri swoole
          docker exec swoole composer -V
          docker exec swoole composer update --no-interaction --prefer-dist --no-progress
          .github/prepare-kafka.sh
          docker exec swoole bash tests/db/install-db.sh
      - name: Test
        run: docker exec swoole composer test
      - name: Test components
        run: docker exec swoole composer test-components
      - name: Print logs
        if: failure()
        run: docker exec swoole php .github/print-logs.php

  ci-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ 7.4 ]
        swoole: [ 4.6 ]
    env:
      MYSQL_SERVER_PASSWORD: ""
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ env.php-versions }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ env.php-versions }}-
            ${{ runner.os }}-composer-
      - name: install db
        run: |
          brew install mysql redis
          brew services start mysql
          brew services start redis
      - name: install php
        run: .github/macos/install-php7.4-mac.sh
      - name: install swoole
        run: .github/macos/install-swoole.sh 4.6.7
      - name: prepare
        run: |
          composer update --prefer-dist --no-progress
          mysql -uroot -e 'CREATE DATABASE IF NOT EXISTS db_imi_test;'
          tests/db/install-db.sh
      - name: test
        run: |
          composer test